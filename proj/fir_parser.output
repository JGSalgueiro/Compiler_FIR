Terminals unused in grammar

   tPRINT
   tBEGIN
   tEND


Grammar

    0 $accept: list $end

    1 list: stmt
    2     | list stmt

    3 stmt: expr ';'
    4     | tREAD lval ';'
    5     | tWHILE '(' expr ')' stmt
    6     | tIF '(' expr ')' stmt
    7     | tIF '(' expr ')' stmt tELSE stmt
    8     | '{' list '}'

    9 expr: tINTEGER
   10     | tSTRING
   11     | '-' expr
   12     | expr '+' expr
   13     | expr '-' expr
   14     | expr '*' expr
   15     | expr '/' expr
   16     | expr '%' expr
   17     | expr '<' expr
   18     | expr '>' expr
   19     | expr tGE expr
   20     | expr tLE expr
   21     | expr tNE expr
   22     | expr tEQ expr
   23     | '(' expr ')'
   24     | lval
   25     | lval '=' expr

   26 lval: tIDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'%' (37) 16
'(' (40) 5 6 7 23
')' (41) 5 6 7 23
'*' (42) 14
'+' (43) 12
'-' (45) 11 13
'/' (47) 15
';' (59) 3 4
'<' (60) 17
'=' (61) 25
'>' (62) 18
'{' (123) 8
'}' (125) 8
error (256)
tINTEGER (258) 9
tIDENTIFIER (259) 26
tSTRING (260) 10
tWHILE (261) 5
tIF (262) 6 7
tPRINT (263)
tREAD (264) 4
tBEGIN (265)
tEND (266)
tIFX (267)
tELSE (268) 7
tGE (269) 19
tLE (270) 20
tEQ (271) 22
tNE (272) 21
tUNARY (273)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
list (33)
    on left: 1 2, on right: 0 2 8
stmt (34)
    on left: 3 4 5 6 7 8, on right: 1 2 5 6 7
expr (35)
    on left: 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25, on right:
    3 5 6 7 11 12 13 14 15 16 17 18 19 20 21 22 23 25
lval (36)
    on left: 26, on right: 4 24 25


State 0

    0 $accept: . list $end

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    tWHILE       shift, and go to state 4
    tIF          shift, and go to state 5
    tREAD        shift, and go to state 6
    '-'          shift, and go to state 7
    '('          shift, and go to state 8
    '{'          shift, and go to state 9

    list  go to state 10
    stmt  go to state 11
    expr  go to state 12
    lval  go to state 13


State 1

    9 expr: tINTEGER .

    $default  reduce using rule 9 (expr)


State 2

   26 lval: tIDENTIFIER .

    $default  reduce using rule 26 (lval)


State 3

   10 expr: tSTRING .

    $default  reduce using rule 10 (expr)


State 4

    5 stmt: tWHILE . '(' expr ')' stmt

    '('  shift, and go to state 14


State 5

    6 stmt: tIF . '(' expr ')' stmt
    7     | tIF . '(' expr ')' stmt tELSE stmt

    '('  shift, and go to state 15


State 6

    4 stmt: tREAD . lval ';'

    tIDENTIFIER  shift, and go to state 2

    lval  go to state 16


State 7

   11 expr: '-' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 17
    lval  go to state 13


State 8

   23 expr: '(' . expr ')'

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 18
    lval  go to state 13


State 9

    8 stmt: '{' . list '}'

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    tWHILE       shift, and go to state 4
    tIF          shift, and go to state 5
    tREAD        shift, and go to state 6
    '-'          shift, and go to state 7
    '('          shift, and go to state 8
    '{'          shift, and go to state 9

    list  go to state 19
    stmt  go to state 11
    expr  go to state 12
    lval  go to state 13


State 10

    0 $accept: list . $end
    2 list: list . stmt

    $end         shift, and go to state 20
    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    tWHILE       shift, and go to state 4
    tIF          shift, and go to state 5
    tREAD        shift, and go to state 6
    '-'          shift, and go to state 7
    '('          shift, and go to state 8
    '{'          shift, and go to state 9

    stmt  go to state 21
    expr  go to state 12
    lval  go to state 13


State 11

    1 list: stmt .

    $default  reduce using rule 1 (list)


State 12

    3 stmt: expr . ';'
   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    tGE  shift, and go to state 22
    tLE  shift, and go to state 23
    tEQ  shift, and go to state 24
    tNE  shift, and go to state 25
    '>'  shift, and go to state 26
    '<'  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32
    ';'  shift, and go to state 33


State 13

   24 expr: lval .
   25     | lval . '=' expr

    '='  shift, and go to state 34

    $default  reduce using rule 24 (expr)


State 14

    5 stmt: tWHILE '(' . expr ')' stmt

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 35
    lval  go to state 13


State 15

    6 stmt: tIF '(' . expr ')' stmt
    7     | tIF '(' . expr ')' stmt tELSE stmt

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 36
    lval  go to state 13


State 16

    4 stmt: tREAD lval . ';'

    ';'  shift, and go to state 37


State 17

   11 expr: '-' expr .
   12     | expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    $default  reduce using rule 11 (expr)


State 18

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr
   23     | '(' expr . ')'

    tGE  shift, and go to state 22
    tLE  shift, and go to state 23
    tEQ  shift, and go to state 24
    tNE  shift, and go to state 25
    '>'  shift, and go to state 26
    '<'  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32
    ')'  shift, and go to state 38


State 19

    2 list: list . stmt
    8 stmt: '{' list . '}'

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    tWHILE       shift, and go to state 4
    tIF          shift, and go to state 5
    tREAD        shift, and go to state 6
    '-'          shift, and go to state 7
    '('          shift, and go to state 8
    '{'          shift, and go to state 9
    '}'          shift, and go to state 39

    stmt  go to state 21
    expr  go to state 12
    lval  go to state 13


State 20

    0 $accept: list $end .

    $default  accept


State 21

    2 list: list stmt .

    $default  reduce using rule 2 (list)


State 22

   19 expr: expr tGE . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 40
    lval  go to state 13


State 23

   20 expr: expr tLE . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 41
    lval  go to state 13


State 24

   22 expr: expr tEQ . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 42
    lval  go to state 13


State 25

   21 expr: expr tNE . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 43
    lval  go to state 13


State 26

   18 expr: expr '>' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 44
    lval  go to state 13


State 27

   17 expr: expr '<' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 45
    lval  go to state 13


State 28

   12 expr: expr '+' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 46
    lval  go to state 13


State 29

   13 expr: expr '-' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 47
    lval  go to state 13


State 30

   14 expr: expr '*' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 48
    lval  go to state 13


State 31

   15 expr: expr '/' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 49
    lval  go to state 13


State 32

   16 expr: expr '%' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 50
    lval  go to state 13


State 33

    3 stmt: expr ';' .

    $default  reduce using rule 3 (stmt)


State 34

   25 expr: lval '=' . expr

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    '-'          shift, and go to state 7
    '('          shift, and go to state 8

    expr  go to state 51
    lval  go to state 13


State 35

    5 stmt: tWHILE '(' expr . ')' stmt
   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    tGE  shift, and go to state 22
    tLE  shift, and go to state 23
    tEQ  shift, and go to state 24
    tNE  shift, and go to state 25
    '>'  shift, and go to state 26
    '<'  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32
    ')'  shift, and go to state 52


State 36

    6 stmt: tIF '(' expr . ')' stmt
    7     | tIF '(' expr . ')' stmt tELSE stmt
   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    tGE  shift, and go to state 22
    tLE  shift, and go to state 23
    tEQ  shift, and go to state 24
    tNE  shift, and go to state 25
    '>'  shift, and go to state 26
    '<'  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32
    ')'  shift, and go to state 53


State 37

    4 stmt: tREAD lval ';' .

    $default  reduce using rule 4 (stmt)


State 38

   23 expr: '(' expr ')' .

    $default  reduce using rule 23 (expr)


State 39

    8 stmt: '{' list '}' .

    $default  reduce using rule 8 (stmt)


State 40

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   19     | expr tGE expr .
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 19 (expr)


State 41

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   20     | expr tLE expr .
   21     | expr . tNE expr
   22     | expr . tEQ expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 20 (expr)


State 42

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr
   22     | expr tEQ expr .

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 22 (expr)


State 43

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   21     | expr tNE expr .
   22     | expr . tEQ expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 21 (expr)


State 44

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   18     | expr '>' expr .
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 18 (expr)


State 45

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   17     | expr '<' expr .
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 17 (expr)


State 46

   12 expr: expr . '+' expr
   12     | expr '+' expr .
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 12 (expr)


State 47

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   13     | expr '-' expr .
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 13 (expr)


State 48

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   14     | expr '*' expr .
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    $default  reduce using rule 14 (expr)


State 49

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   15     | expr '/' expr .
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    $default  reduce using rule 15 (expr)


State 50

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   16     | expr '%' expr .
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr

    $default  reduce using rule 16 (expr)


State 51

   12 expr: expr . '+' expr
   13     | expr . '-' expr
   14     | expr . '*' expr
   15     | expr . '/' expr
   16     | expr . '%' expr
   17     | expr . '<' expr
   18     | expr . '>' expr
   19     | expr . tGE expr
   20     | expr . tLE expr
   21     | expr . tNE expr
   22     | expr . tEQ expr
   25     | lval '=' expr .

    tGE  shift, and go to state 22
    tLE  shift, and go to state 23
    tEQ  shift, and go to state 24
    tNE  shift, and go to state 25
    '>'  shift, and go to state 26
    '<'  shift, and go to state 27
    '+'  shift, and go to state 28
    '-'  shift, and go to state 29
    '*'  shift, and go to state 30
    '/'  shift, and go to state 31
    '%'  shift, and go to state 32

    $default  reduce using rule 25 (expr)


State 52

    5 stmt: tWHILE '(' expr ')' . stmt

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    tWHILE       shift, and go to state 4
    tIF          shift, and go to state 5
    tREAD        shift, and go to state 6
    '-'          shift, and go to state 7
    '('          shift, and go to state 8
    '{'          shift, and go to state 9

    stmt  go to state 54
    expr  go to state 12
    lval  go to state 13


State 53

    6 stmt: tIF '(' expr ')' . stmt
    7     | tIF '(' expr ')' . stmt tELSE stmt

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    tWHILE       shift, and go to state 4
    tIF          shift, and go to state 5
    tREAD        shift, and go to state 6
    '-'          shift, and go to state 7
    '('          shift, and go to state 8
    '{'          shift, and go to state 9

    stmt  go to state 55
    expr  go to state 12
    lval  go to state 13


State 54

    5 stmt: tWHILE '(' expr ')' stmt .

    $default  reduce using rule 5 (stmt)


State 55

    6 stmt: tIF '(' expr ')' stmt .
    7     | tIF '(' expr ')' stmt . tELSE stmt

    tELSE  shift, and go to state 56

    $default  reduce using rule 6 (stmt)


State 56

    7 stmt: tIF '(' expr ')' stmt tELSE . stmt

    tINTEGER     shift, and go to state 1
    tIDENTIFIER  shift, and go to state 2
    tSTRING      shift, and go to state 3
    tWHILE       shift, and go to state 4
    tIF          shift, and go to state 5
    tREAD        shift, and go to state 6
    '-'          shift, and go to state 7
    '('          shift, and go to state 8
    '{'          shift, and go to state 9

    stmt  go to state 57
    expr  go to state 12
    lval  go to state 13


State 57

    7 stmt: tIF '(' expr ')' stmt tELSE stmt .

    $default  reduce using rule 7 (stmt)
